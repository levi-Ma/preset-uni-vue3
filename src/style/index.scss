/* 基本样式初始化 */
page {
  --primary: 87, 13, 248;
  --secondary: 240, 0, 184;
  --accent: 55, 205, 190;
  --neutral: 61, 68, 81;
  --primary-focus: 68, 6, 203;
  --secondary-focus: 189, 0, 145;
  --accent-focus: 42, 167, 155;
  --neutral-focus: 42, 46, 55;
  --info: 59, 130, 246;
  --success: 16, 185, 129;
  --warning: 245, 158, 11;
  --error: 239, 68, 68;
  --info-focus: 37, 99, 235;
  --success-focus: 5, 150, 105;
  --warning-focus: 217, 119, 6;
  --error-focus: 220, 38, 38;
  --base: 127, 137, 154;
  --base-focus: 101, 111, 127;
  --white: 255, 255, 255;
  --black: 0, 0, 0;
}
image {
  display: block;
}
view {
  box-sizing: border-box;
}
button.clear {
  padding: 0;
  margin: 0;
  background: transparent;
  border: none;
  border-radius: 0;
  outline: none;

  &::after {
    display: none;
  }
}
.statusbar {
  padding-top: var(--status-bar-height);
}
.border {
  border: 1.5px solid;
}
.text-primary {
  color: rgba(var(--primary), var(--text-opacity, 1));
}
.text-secondary {
  color: rgba(var(--secondary), var(--text-opacity, 1));
}
.text-accent {
  color: rgba(var(--accent), var(--text-opacity, 1));
}
.text-neutral {
  color: rgba(var(--neutral), var(--text-opacity, 1));
}
.text-primary-focus {
  color: rgba(var(--primary-focus), var(--text-opacity, 1));
}
.text-secondary-focus {
  color: rgba(var(--secondary-focus), var(--text-opacity, 1));
}
.text-accent-focus {
  color: rgba(var(--accent-focus), var(--text-opacity, 1));
}
.text-neutral-focus {
  color: rgba(var(--neutral-focus), var(--text-opacity, 1));
}
.text-info {
  color: rgba(var(--info), var(--text-opacity, 1));
}
.text-success {
  color: rgba(var(--success), var(--text-opacity, 1));
}
.text-warning {
  color: rgba(var(--warning), var(--text-opacity, 1));
}
.text-error {
  color: rgba(var(--error), var(--text-opacity, 1));
}
.text-info-focus {
  color: rgba(var(--info-focus), var(--text-opacity, 1));
}
.text-success-focus {
  color: rgba(var(--success-focus), var(--text-opacity, 1));
}
.text-warning-focus {
  color: rgba(var(--warning-focus), var(--text-opacity, 1));
}
.text-error-focus {
  color: rgba(var(--error-focus), var(--text-opacity, 1));
}
.text-base {
  color: rgba(var(--base), var(--text-opacity, 1));
}
.text-base-focus {
  color: rgba(var(--base-focus), var(--text-opacity, 1));
}
.text-white {
  color: rgba(var(--white), var(--text-opacity, 1));
}
.bg-primary {
  background-color: rgba(var(--primary), var(--bg-opacity, 1));
}
.bg-secondary {
  background-color: rgba(var(--secondary), var(--bg-opacity, 1));
}
.bg-accent {
  background-color: rgba(var(--accent), var(--bg-opacity, 1));
}
.bg-neutral {
  background-color: rgba(var(--neutral), var(--bg-opacity, 1));
}
.bg-primary-focus {
  background-color: rgba(var(--primary-focus), var(--bg-opacity, 1));
}
.bg-secondary-focus {
  background-color: rgba(var(--secondary-focus), var(--bg-opacity, 1));
}
.bg-accent-focus {
  background-color: rgba(var(--accent-focus), var(--bg-opacity, 1));
}
.bg-neutral-focus {
  background-color: rgba(var(--neutral-focus), var(--bg-opacity, 1));
}
.bg-info {
  background-color: rgba(var(--info), var(--bg-opacity, 1));
}
.bg-success {
  background-color: rgba(var(--success), var(--bg-opacity, 1));
}
.bg-warning {
  background-color: rgba(var(--warning), var(--bg-opacity, 1));
}
.bg-error {
  background-color: rgba(var(--error), var(--bg-opacity, 1));
}
.bg-info-focus {
  background-color: rgba(var(--info-focus), var(--bg-opacity, 1));
}
.bg-success-focus {
  background-color: rgba(var(--success-focus), var(--bg-opacity, 1));
}
.bg-warning-focus {
  background-color: rgba(var(--warning-focus), var(--bg-opacity, 1));
}
.bg-error-focus {
  background-color: rgba(var(--error-focus), var(--bg-opacity, 1));
}
.bg-base {
  background-color: rgba(var(--base), var(--bg-opacity, 1));
}
.bg-base-focus {
  background-color: rgba(var(--base-focus), var(--bg-opacity, 1));
}
.bg-white {
  background-color: rgba(var(--white), var(--bg-opacity, 1));
}
.border-primary {
  border-color: rgba(var(--primary), var(--border-opacity, 1));
}
.border-secondary {
  border-color: rgba(var(--secondary), var(--border-opacity, 1));
}
.border-accent {
  border-color: rgba(var(--accent), var(--border-opacity, 1));
}
.border-neutral {
  border-color: rgba(var(--neutral), var(--border-opacity, 1));
}
.border-primary-focus {
  border-color: rgba(var(--primary-focus), var(--border-opacity, 1));
}
.border-secondary-focus {
  border-color: rgba(var(--secondary-focus), var(--border-opacity, 1));
}
.border-accent-focus {
  border-color: rgba(var(--accent-focus), var(--border-opacity, 1));
}
.border-neutral-focus {
  border-color: rgba(var(--neutral-focus), var(--border-opacity, 1));
}
.border-info {
  border-color: rgba(var(--info), var(--border-opacity, 1));
}
.border-success {
  border-color: rgba(var(--success), var(--border-opacity, 1));
}
.border-warning {
  border-color: rgba(var(--warning), var(--border-opacity, 1));
}
.border-error {
  border-color: rgba(var(--error), var(--border-opacity, 1));
}
.border-info-focus {
  border-color: rgba(var(--info-focus), var(--border-opacity, 1));
}
.border-success-focus {
  border-color: rgba(var(--success-focus), var(--border-opacity, 1));
}
.border-warning-focus {
  border-color: rgba(var(--warning-focus), var(--border-opacity, 1));
}
.border-error-focus {
  border-color: rgba(var(--error-focus), var(--border-opacity, 1));
}
.border-base {
  border-color: rgba(var(--base), var(--border-opacity, 1));
}
.border-base-focus {
  border-color: rgba(var(--base-focus), var(--border-opacity, 1));
}
.border-white {
  border-color: rgba(var(--white), var(--border-opacity, 1));
}
.bg-transparent {
  background-color: transparent;
}
.border-transparent {
  border-color: transparent;
}
.bg-currentColor {
  background-color: currentColor;
}
.border-currentColor {
  border-color: currentColor;
}
.text-currentColor {
  color: currentColor;
}
.block {
  display: block;
}
.inline-block {
  display: inline-block;
}
.inline {
  display: inline;
}
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}
.grid {
  display: grid;
}
.inline-grid {
  display: inline-grid;
}
.hidden {
  display: none;
}
.flex-row {
  flex-direction: row;
}
.flex-row-reverse {
  flex-direction: row-reverse;
}
.flex-col {
  flex-direction: column;
}
.flex-col-reverse {
  flex-direction: column-reverse;
}
.flex-wrap {
  flex-wrap: wrap;
}
.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}
.flex-nowrap {
  flex-wrap: nowrap;
}
.flex-1 {
  flex: 1 1 0;
}
.flex-auto {
  flex: 1 1 auto;
}
.flex-initial {
  flex: 0 1 auto;
}
.flex-none {
  flex: none;
}
.flex-grow {
  flex-grow: 1;
}
.flex-grow-0 {
  flex-grow: 0;
}
.flex-shrink {
  flex-shrink: 1;
}
.flex-shrink-0 {
  flex-shrink: 0;
}
.content-center {
  align-content: center;
}
.content-start {
  align-content: flex-start;
}
.content-end {
  align-content: flex-end;
}
.content-between {
  align-content: space-between;
}
.content-around {
  align-content: space-around;
}
.content-evenly {
  align-content: space-evenly;
}
.items-flex-start {
  align-items: flex-start;
}
.items-flex-end {
  align-items: flex-end;
}
.items-center {
  align-items: center;
}
.items-baseline {
  align-items: baseline;
}
.items-stretch {
  align-items: stretch;
}
.self-auto {
  align-self: auto;
}
.self-start {
  align-self: flex-start;
}
.self-end {
  align-self: flex-end;
}
.self-center {
  align-self: center;
}
.self-stretch {
  align-self: stretch;
}
.justify-start {
  justify-content: flex-start;
}
.justify-end {
  justify-content: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-around {
  justify-content: space-around;
}
.justify-evenly {
  justify-content: space-evenly;
}
.justify-items-auto {
  justify-items: auto;
}
.justify-items-start {
  justify-items: start;
}
.justify-items-end {
  justify-items: end;
}
.justify-items-center {
  justify-items: center;
}
.justify-items-stretch {
  justify-items: stretch;
}
.justify-self-auto {
  justify-self: auto;
}
.justify-self-start {
  justify-self: start;
}
.justify-self-end {
  justify-self: end;
}
.justify-self-center {
  justify-self: center;
}
.justify-self-stretch {
  justify-self: stretch;
}
.w-full {
  width: 100%;
}
.w-screen {
  width: 100vw;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.mt-a {
  margin-top: auto;
}
.ml-a {
  margin-left: auto;
}
.text-xs {
  font-size: 0.75rem;
}
.text-sm {
  font-size: 0.875rem;
}
.text-md {
  font-size: 1rem;
}
.text-lg {
  font-size: 1.125rem;
}
.text-xl {
  font-size: 1.25rem;
}
.text-2xl {
  font-size: 1.5rem;
}
.text-3xl {
  font-size: 1.875rem;
}
.text-4xl {
  font-size: 2.25rem;
}
.text-5xl {
  font-size: 3rem;
}
.text-6xl {
  font-size: 3.75rem;
}
.text-7xl {
  font-size: 4.5rem;
}
.text-8xl {
  font-size: 6rem;
}
.text-9xl {
  font-size: 8rem;
}
.font-thin {
  font-weight: 100;
}
.font-extralight {
  font-weight: 200;
}
.font-light {
  font-weight: 300;
}
.font-normal {
  font-weight: 400;
}
.font-medium {
  font-weight: 500;
}
.font-semibold {
  font-weight: 600;
}
.font-bold {
  font-weight: 700;
}
.font-extrabold {
  font-weight: 800;
}
.font-black {
  font-weight: 900;
}
.static {
  position: static;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.sticky {
  position: sticky;
}
.top-0 {
  top: 0;
}
.bottom-0 {
  bottom: 0;
}
.left-0 {
  left: 0;
}
.right-0 {
  right: 0;
}
.underline {
  text-decoration: underline;
}
.line-through {
  text-decoration: line-through;
}
.no-underline {
  text-decoration: none;
}
.rounded-none {
  border-radius: 0;
}
.rounded-sm {
  border-radius: 0.125rem;
}
.rounded-md {
  border-radius: 0.375rem;
}
.rounded-lg {
  border-radius: 0.5rem;
}
.rounded-xl {
  border-radius: 0.75rem;
}
.rounded-2xl {
  border-radius: 1rem;
}
.rounded-3xl {
  border-radius: 1.5rem;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded {
  border-radius: 0.25rem;
}
.cursor-auto {
  cursor: auto;
}
.cursor-default {
  cursor: default;
}
.cursor-pointer {
  cursor: pointer;
}
.cursor-wait {
  cursor: wait;
}
.cursor-text {
  cursor: text;
}
.cursor-move {
  cursor: move;
}
.cursor-not-allowed {
  cursor: not-allowed;
}
.uppercase {
  text-transform: uppercase;
}
.lowercase {
  text-transform: lowercase;
}
.capitalize {
  text-transform: capitalize;
}
.normal-case {
  text-transform: none;
}
.shadow-none {
  box-shadow: none;
}
.shadow-sm {
  box-shadow: rgba(0, 0, 0, 0.16) 0 1px 4px;
}
.shadow {
  box-shadow: rgba(99, 99, 99, 0.2) 0 2px 8px 0;
}
.shadow-md {
  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;
}
.shadow-lg {
  box-shadow: rgba(0, 0, 0, 0.35) 0 5px 15px;
}
.shadow-xl {
  box-shadow: rgba(0, 0, 0, 0.19) 0 10px 20px, rgba(0, 0, 0, 0.23) 0 6px 6px;
}
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-justify {
  text-align: justify;
}
.transition {
  transition: all 0.2s ease-in-out;
}
/* 混入 */
// 用于在网格布局中指定列
@mixin grid-columns($clamp) {
  grid-template-columns: repeat($clamp, minmax(0, 1fr));
}
// 用于在网格布局中指定行
@mixin grid-rows($clamp) {
  grid-template-rows: repeat($clamp, minmax(0, 1fr));
}
// 文字溢出处理(一行)
@mixin text-ellipsis($width) {
  max-width: $width;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
// 文字溢出处理(多行)
@mixin text-hidden-line($line) {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: $line;
  overflow: hidden;
}
// HEX 色值转 RGB 色值 并 赋值到变量
// 用于主题色定义
@mixin VRgb($icons) {
  @each $name, $glyph in $icons {
    $red: red($glyph);
    $green: green($glyph);
    $blue: blue($glyph);
    $RGB: $red, $green, $blue;
    --#{$name}: #{$RGB};
  }
}
/* 循环 */
// 循环透明度
@each $num in 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100 {
  .opacity-#{$num} {
    opacity: $num * 0.01;
  }
  .text-opacity-#{$num} {
    --text-opacity: #{$num} * 0.01;
  }
  .bg-opacity-#{$num} {
    --bg-opacity: #{$num} * 0.01;
  }
  .border-opacity-#{$num} {
    --border-opacity: #{$num} * 0.01;
  }
}
// 循环盒模型间距,尺寸
@for $i from 0 through 75 {
  .w-#{$i} {
    width: $i * 10rpx;
  }
  .h-#{$i} {
    height: $i * 10rpx;
  }
  .m-#{$i} {
    margin: $i * 10rpx;
  }
  .mt-#{$i} {
    margin-top: $i * 10rpx;
  }
  .mb-#{$i} {
    margin-bottom: $i * 10rpx;
  }
  .ml-#{$i} {
    margin-left: $i * 10rpx;
  }
  .mr-#{$i} {
    margin-right: $i * 10rpx;
  }
  .mx-#{$i} {
    margin-left: $i * 10rpx;
    margin-right: $i * 10rpx;
  }
  .my-#{$i} {
    margin-top: $i * 10rpx;
    margin-bottom: $i * 10rpx;
  }
  .p-#{$i} {
    padding: $i * 10rpx;
  }
  .pt-#{$i} {
    padding-top: $i * 10rpx;
  }
  .pb-#{$i} {
    padding-bottom: $i * 10rpx;
  }
  .pl-#{$i} {
    padding-left: $i * 10rpx;
  }
  .pr-#{$i} {
    padding-right: $i * 10rpx;
  }
  .px-#{$i} {
    padding-left: $i * 10rpx;
    padding-right: $i * 10rpx;
  }
  .py-#{$i} {
    padding-top: $i * 10rpx;
    padding-bottom: $i * 10rpx;
  }
}
// 循环网格布局列/行
@for $i from 1 through 6 {
  // 用于在网格布局中指定列
  .grid-cols-#{$i} {
    @include grid-columns($i);
  }

  // 用于在网格布局中指定行
  .grid-rows-#{$i} {
    @include grid-rows($i);
  }
}
